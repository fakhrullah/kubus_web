name: Build Docker Image

on:
  push:
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  IMAGE_NAME: kubus_web
  ORG: fajarhac
  ITEM: KUBUS_WEB

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest

    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_BUILD }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/$ORG/$IMAGE_NAME
          
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  # deploy:
  #   needs: push
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Set version env
  #       run: |
  #         # Strip git ref prefix from version
  #         VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

  #         # Strip "v" prefix from tag name
  #         [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

  #         echo "VERSION=$VERSION" >> $GITHUB_ENV

  #     - name: Run remote ssh commands deployer script
  #       uses: garygrossgarten/github-action-ssh@release
  #       with:
  #         host: ${{ secrets.SSH_HOST }}
  #         port: ${{ secrets.SSH_PORT }}
  #         username: ${{ secrets.SSH_USER }}
  #         privateKey: ${{ secrets.DEPLOYER_SSH }}
  #         command: |
  #           echo ${{ env.ITEM }} ${{ env.VERSION }}
  #           ./deploy.sh ${{ env.ITEM }} ${{ env.VERSION }}
